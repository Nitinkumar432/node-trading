<!DOCTYPE html>
<html>
<head>
  <title>User Profiles Verification</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <!-- <link rel="stylesheet" href="css/"> -->
 
 
  <style>
    .spinner {
      display: none;
      border: 4px solid #f3f3f3;
      border-top: 4px solid #3498db;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      animation: spin 2s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    .modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.7); /* Darker overlay */
  padding-top: 60px;
  transition: opacity 0.3s ease-in-out; /* Smooth fade-in */
}

.modal-content {
  background-color: #ffffff;
  margin: 5% auto;
  padding: 20px;
  border-radius: 8px; /* Rounded corners */
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2); /* Shadow effect */
  width: 60%; /* Reduced width for a more compact look */
  transition: all 0.3s ease-in-out; /* Smooth transition */
  animation: modalFadeIn 0.4s ease-out; /* Animation for modal appearance */
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #555; /* Slightly darker hover effect */
  text-decoration: none;
  cursor: pointer;
}

/* Modal Fade-In Animation */
@keyframes modalFadeIn {
  from {
    opacity: 0;
    transform: translateY(-20%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

    .verified {
      color: green;
    }

    .rejected {
      color: red;
    }

    .user-details {
      background-color: #f5f5f5;
      padding: 20px;
      border-radius: 5px;
      margin-bottom: 20px;
    }

    .user-details p {
      margin-bottom: 10px;
    }

    .user-details button {
      margin-right: 10px;
    }
  </style>
</head>
<body>
  <div class="container my-5">
    <h1>User Profiles Verification</h1>

    <h2>Unverified Profiles</h2>
    <% if (unverifiedProfiles.length === 0) { %>
      <div class="alert alert-info">
        No unverified user profiles found.
      </div>
    <% } else { %>
      <% unverifiedProfiles.forEach(profile => { %>
        <div class="user-details">
          <p><strong>Name:</strong> <%= profile.name %></p>
          <p><strong>Email:</strong> <%= profile.email %></p>
          <p><strong>Demat Account Number:</strong> <%= profile.dematAccountNumber %></p>
          <p><strong>DP ID:</strong> <%= profile.dpId %></p>
          <p><strong>Depository Participant:</strong> <%= profile.depositoryParticipant %></p>
          <p><strong>Depository:</strong> <%= profile.depository %></p>
          <p><strong>Aadhar Number:</strong> <%= profile.aadharNumber %></p>
          <p><strong>PAN Card:</strong> <%= profile.pancard %></p>
          <p><strong>Phone Number:</strong> <%= profile.phoneNumber %></p>
          <p><strong>Bank Name:</strong> <%= profile.bankName %></p>
          <p><strong>Account Number:</strong> <%= profile.accountNumber %></p>
          <p><strong>Branch:</strong> <%= profile.branch %></p>
          <p><strong>Nominees:</strong> <%= profile.nominees %></p>
          <p><strong>KYC Copy URL:</strong> <%= profile.kycCopyUrl || 'N/A' %></p>
    
        
          <button class="btn btn-primary verify-btn" data-id="<%= profile._id %>">Verify</button>
          <button class="btn btn-danger reject-btn" data-id="<%= profile._id %>">Reject</button>
        </div>
      <% }); %>
    <% } %>

    <h2>Verified Profiles</h2>
    <% if (verifiedProfiles.length === 0) { %>
      <div class="alert alert-info">
        No verified user profiles found.
      </div>
    <% } else { %>
      <table class="table">
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Verified By</th>
            <th>Reason</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% verifiedProfiles.forEach(profile => { %>
            <tr class="<%= profile.isVerified === 'true' ? 'verified' : 'rejected' %>">
              <td><%= profile.name %></td>
              <td><%= profile.email %></td>
              <td><%= profile.verified_by || 'N/A' %></td>
              <td><%= profile.reason || 'N/A' %></td>
              <td>
                <button class="btn btn-info view-btn" data-id="<%= profile._id %>">View Details</button>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    <% } %>

    <h2>Rejected Profiles</h2>
    <% if (rejectedProfiles.length === 0) { %>
      <div class="alert alert-info">
        No rejected user profiles found.
      </div>
    <% } else { %>
      <table class="table">
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Rejected By</th>
            <th>Reason</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% rejectedProfiles.forEach(profile => { %>
            <tr class="rejected">
              <td><%= profile.name %></td>
              <td><%= profile.email %></td>
              <td><%= profile.verified_by || 'N/A' %></td>
              <td><%= profile.reason || 'N/A' %></td>
              <td>
                <button class="btn btn-info view-btn" data-id="<%= profile._id %>">View Details</button>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    <% } %>
  </div>

  <!-- Modal for Viewing User Details -->
  <div id="viewModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>User Details</h2>
      <div id="userDetails"></div>
    </div>
  </div>

  <!-- Modal for Rejecting User -->
  <div id="rejectModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>Reject User</h2>
      <form id="rejectForm">
        <div class="form-group">
          <label for="reason">Reason:</label>
          <textarea class="form-control" id="reason" name="reason" rows="3" required></textarea>
        </div>
        <button type="submit" class="btn btn-danger">
          Reject
          <span class="spinner"></span>
        </button>
      </form>
    </div>
  </div>

  <script>
   const verifyButtons = document.querySelectorAll('.verify-btn');
const viewButtons = document.querySelectorAll('.view-btn');
const rejectButtons = document.querySelectorAll('.reject-btn');
const viewModal = document.getElementById('viewModal');
const rejectModal = document.getElementById('rejectModal');
const closeModals = document.querySelectorAll('.close');
const rejectForm = document.getElementById('rejectForm');
const spinner = document.querySelector('.spinner');

let currentProfileId;

verifyButtons.forEach(button => {
  button.addEventListener('click', function() {
    currentProfileId = this.getAttribute('data-id');

    // Implement verification logic (e.g., send AJAX request to server)
    fetch(`/verify/${currentProfileId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    })
    .then(response => {
      if (response.ok) {
        alert("Verification successful!");
        window.location.reload(); // Reload the page to update the UI
      } else {
        alert("There was an error verifying the user.");
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert("There was an error verifying the user.");
    });
  });
});

viewButtons.forEach(button => {
  button.addEventListener('click', function() {
    currentProfileId = this.getAttribute('data-id');
    fetch(`/user_profile/${currentProfileId}`)
      .then(response => response.json())
      .then(data => {
        const userDetails = document.getElementById('userDetails');
        userDetails.innerHTML = `
          <p><strong>Name:</strong> ${data.name}</p>
          <p><strong>Email:</strong> ${data.email}</p>
          <p><strong>Demat Account Number:</strong> ${data.dematAccountNumber}</p>
          <p><strong>DP ID:</strong> ${data.dpId}</p>
          <p><strong>Depository Participant:</strong> ${data.depositoryParticipant}</p>
          <p><strong>Depository:</strong> ${data.depository}</p>
          <p><strong>Aadhar Number:</strong> ${data.aadharNumber}</p>
          <p><strong>PAN Card:</strong> ${data.pancard}</p>
          <p><strong>Phone Number:</strong> ${data.phoneNumber}</p>
          <p><strong>Bank Name:</strong> ${data.bankName}</p>
          <p><strong>Account Number:</strong> ${data.accountNumber}</p>
          <p><strong>Branch:</strong> ${data.branch}</p>
          <p><strong>Nominees:</strong> ${data.nominees}</p>
          <p><strong>KYC Copy URL:</strong> ${data.kycCopyUrl || 'N/A'}</p>
        `;
        viewModal.style.display = "block";
      })
      .catch(error => {
        console.error('Error:', error);
        alert("Error fetching user details.");
      });
  });
});

rejectButtons.forEach(button => {
  button.addEventListener('click', function() {
    currentProfileId = this.getAttribute('data-id');
    rejectModal.style.display = "block";
  });
});

closeModals.forEach(modal => {
  modal.onclick = function() {
    viewModal.style.display = "none";
    rejectModal.style.display = "none";
  };
});

window.onclick = function(event) {
  if (event.target === viewModal || event.target === rejectModal) {
    viewModal.style.display = "none";
    rejectModal.style.display = "none";
  }
};

rejectForm.addEventListener('submit', function(event) {
  event.preventDefault();
  spinner.style.display = 'inline-block';

  const reason = document.getElementById('reason').value;

  fetch(`/reject/${currentProfileId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ reason }),
  })
  .then(response => {
    if (response.ok) {
      alert("User rejected successfully!");
      window.location.reload();
    } else {
      alert("There was an error rejecting the user.");
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert("There was an error rejecting the user.");
  })
  .finally(() => {
    spinner.style.display = 'none';
    rejectModal.style.display = "none";
  });
});
  </script>
</body>
</html>