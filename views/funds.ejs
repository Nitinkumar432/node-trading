<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Funds Management</title>
    <link rel="stylesheet" href="css/funds.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Custom CSS */
        .btn-custom {
            background-color: #007bff;
            color: white;
        }
        .spinner-border {
            display: none; /* Hide spinner by default */
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <h1 class="mb-4">My Account</h1>

    <!-- Account Balance Section -->
    <div class="card mb-4">
        <div class="d-flex justify-content-center align-items-center">
            <div>
                <h5><%= user.name %></h5>
                <p>Trading Balance: <strong class="balance-display" id="balance">₹<%= user.funds %></strong></p>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <button class="btn btn-custom" data-bs-toggle="modal" data-bs-target="#addFundsModal">Add Funds</button>
            <button class="btn btn-custom" data-bs-toggle="modal" data-bs-target="#withdrawModal">Withdraw</button>
        </div>
    </div>

    <!-- Add Funds Modal -->
    <div class="modal fade" id="addFundsModal" tabindex="-1" aria-labelledby="addFundsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addFundsModalLabel">Add Funds</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addFundsForm">
                        <div class="mb-3">
                            <label for="addAmount" class="form-label">Enter Amount to Add</label>
                            <input type="number" class="form-control" id="addAmount" required min="1">
                        </div>
                        <div class="mb-3">
                            <label for="paymentMethod" class="form-label">Select Payment Method</label>
                            <select class="form-select" id="paymentMethod" required>
                                <option value="" disabled selected>Select payment method</option>
                                <option value="credit-card">Credit/Debit Card</option>
                                <option value="bank-transfer">Bank Transfer</option>
                                <option value="digital-wallet">Digital Wallet</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-custom w-100">Add Funds</button>
                        <div class="spinner-border text-light" id="addLoading" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Withdraw Modal -->
    <div class="modal fade" id="withdrawModal" tabindex="-1" aria-labelledby="withdrawModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="withdrawModalLabel">Withdraw Funds</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="withdrawForm">
                        <div class="mb-3">
                            <label for="withdrawAmount" class="form-label">Enter Amount to Withdraw</label>
                            <input type="number" class="form-control" id="withdrawAmount" required min="1">
                        </div>
                        <div class="mb-3">
                            <label for="withdrawMethod" class="form-label">Select Withdrawal Method</label>
                            <select class="form-select" id="withdrawMethod" required>
                                <option value="" disabled selected>Select withdrawal method</option>
                                <option value="bank-transfer">Bank Transfer</option>
                                <option value="digital-wallet">Digital Wallet</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-custom w-100">Withdraw Funds</button>
                        <div class="spinner-border text-light" id="withdrawLoading" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Transaction History Section -->
    <div class="card mt-4">
        <h5>Transaction History</h5>
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Transaction Type</th>
                    <th>Amount</th>
                    <th>Payment Method</th>
                </tr>
            </thead>
            <tbody id="transactionHistory">
                <!-- Transaction entries will be dynamically added here -->
            </tbody>
        </table>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
<script>
    let balance = parseFloat($('#balance').text().replace('₹', '')); // Initially set balance from backend
    let transactions = []; // Array to store transaction history

    // Add Funds
    $('#addFundsForm').on('submit', function(e) {
        e.preventDefault();
        const addAmount = parseFloat($('#addAmount').val());
        const paymentMethod = $('#paymentMethod').val();

        if (addAmount > 0) {
            $('#addLoading').show(); // Show loading spinner
            $.ajax({
                url: '/funds/add', // Update with your API endpoint
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ amount: addAmount }),
                success: function(response) {
                    balance += addAmount;
                    transactions.unshift({
                        date: new Date().toLocaleDateString(),
                        type: 'Deposit',
                        amount: addAmount.toFixed(2),
                        method: paymentMethod
                    });
                    updateBalance();
                    updateTransactionHistory();
                    $('#addFundsModal').modal('hide');
                    $('#addFundsForm')[0].reset(); // Clear form fields
                    alert('Funds added successfully!'); // Notify user
                },
                error: function(xhr) {
                    alert(xhr.responseJSON.message); // Show error message
                },
                complete: function() {
                    $('#addLoading').hide(); // Hide loading spinner
                }
            });
        }
    });

    // Withdraw Funds
    $('#withdrawForm').on('submit', function(e) {
        e.preventDefault();
        const withdrawAmount = parseFloat($('#withdrawAmount').val());
        const withdrawMethod = $('#withdrawMethod').val();

        if (withdrawAmount > 0 && withdrawAmount <= balance) {
            if (confirm(`Are you sure you want to withdraw ₹${withdrawAmount.toFixed(2)}?`)) {
                $('#withdrawLoading').show(); // Show loading spinner
                $.ajax({
                    url: '/funds/withdraw', // Update with your API endpoint
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ amount: withdrawAmount }),
                    success: function(response) {
                        balance -= withdrawAmount;
                        transactions.unshift({
                            date: new Date().toLocaleDateString(),
                            type: 'Withdrawal',
                            amount: withdrawAmount.toFixed(2),
                            method: withdrawMethod
                        });
                        updateBalance();
                        updateTransactionHistory();
                        $('#withdrawModal').modal('hide');
                        $('#withdrawForm')[0].reset(); // Clear form fields
                        alert('Funds withdrawn successfully!'); // Notify user
                    },
                    error: function(xhr) {
                        alert(xhr.responseJSON.message); // Show error message
                    },
                    complete: function() {
                        $('#withdrawLoading').hide(); // Hide loading spinner
                    }
                });
            }
        } else {
            alert('Insufficient funds or invalid amount.'); // Error notification
        }
    });

    // Update balance display
    function updateBalance() {
        $('#balance').text(`₹${balance.toFixed(2)}`);
    }

    // Update transaction history display
    function updateTransactionHistory() {
        const historyTable = $('#transactionHistory');
        historyTable.empty(); // Clear existing entries
        transactions.forEach(transaction => {
            historyTable.append(`
                <tr>
                    <td>${transaction.date}</td>
                    <td>${transaction.type}</td>
                    <td>₹${transaction.amount}</td>
                    <td>${transaction.method}</td>
                </tr>
            `);
        });
    }
</script>
</body>
</html>
